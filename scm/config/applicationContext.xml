<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
      

      <!-- 配置C3P0连接池,目的：管理数据库连接 -->
      <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
      		<property name="driverClass" value="com.mysql.jdbc.Driver"/>
      		<property name="jdbcUrl" value="jdbc:mysql:///scm"/>
      		<property name="user" value="root"/>
      		<property name="password" value="123456"/>
      </bean>

      <!-- 配置SqlSessionFactoryBean，目的：加载mybaits配置文件和映射文件，即替代原Mybatis工具类的作用 -->
      <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      		<property name="dataSource" ref="dataSource"/>
      		<property name="configLocation" value="classpath:myBatis-config.xml" />
      		<!-- -配置扫描式加载SQL映射文件,记得去掉mybatis-config配置 -->
			<property name="mapperLocations" value="classpath:com/yjy/scm/dao/*.xml"/>
      </bean>
 
      <!-- 配置Mybatis的事务管理器，即因为Mybatis底层用的是JDBC事务管事器，所以在这里依然配置JDBC事务管理器 -->
      <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      		<property name="dataSource" ref="dataSource"/>
      </bean>
      
      <!-- 配置事务通知，即让哪些方法需要事务支持 -->
      <tx:advice id="advice" transaction-manager="transactionManager">
      		<tx:attributes>
      			<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception" />
				<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
				<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception" />
				<tx:method name="*" propagation="SUPPORTS" />
      		</tx:attributes>
      </tx:advice>
      
      <!-- 配置事务切面，即让哪些包下的类需要事务 -->
      <aop:config>
      		<aop:advisor advice-ref="advice" pointcut="execution(* com.yjy.scm.service.impl.*.*(..))"/>
      </aop:config>
      
      <!-- 配置SessionTemplate，已封装了繁琐的数据操作 -->
	  <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
			<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	  </bean>
	  
	  <!-- 自动扫描组件，要把controller去除，他们是在spring-mvc.xml中配置，如果不去除会影响事务管理。 -->
	  <context:component-scan base-package="com.yjy">
	  		<context:exclude-filter type="annotation" 
	  			expression="org.springframework.stereotype.Controller" />
	  </context:component-scan>
      
      
      <!-- 配置 转换器，对于在basePackage设置的包（包括子包）下的接口类，如果接口类的全类名在Mapper.xml文件中和定义过命名空间一致，
		 将被转换成spring的BEAN，在调用 的地方通过@Autowired方式将可以注入接口实例 -->
      <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
      		<property name="basePackage" value="com.yjy.scm.dao" />
      </bean>
</beans>







